# Generated by Django 4.2 on 2023-12-28 22:42

import core.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('class_number', core.models.FixedCharField(blank=True, choices=[('1', 'Prima'), ('2', 'Seconda'), ('3', 'Terza'), ('4', 'Quarta'), ('5', 'Quinta')], default='', max_length=1)),
                ('class_section', core.models.FixedCharField(blank=True, choices=[('sca', 'Scientifico A'), ('scb', 'Scientifico B'), ('scc', 'Scientifico C'), ('cla', 'Classico'), ('spo', 'Sportivo')], default='', max_length=3)),
                ('can_buy_tickets', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'utenti',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
    ]
